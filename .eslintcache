[{"C:\\MyReactApp\\eshopapp\\src\\index.js":"1","C:\\MyReactApp\\eshopapp\\src\\App.js":"2","C:\\MyReactApp\\eshopapp\\src\\components\\Products\\Product\\styles.js":"3","C:\\MyReactApp\\eshopapp\\src\\components\\Products\\Products.jsx":"4","C:\\MyReactApp\\eshopapp\\src\\components\\Products\\Product\\Product.jsx":"5","C:\\MyReactApp\\eshopapp\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\MyReactApp\\eshopapp\\src\\components\\Navbar\\styles.js":"7","C:\\MyReactApp\\eshopapp\\src\\lib\\commerce.js":"8","C:\\MyReactApp\\eshopapp\\src\\components\\Cart\\Cart.jsx":"9","C:\\MyReactApp\\eshopapp\\src\\components\\Cart\\styles.js":"10","C:\\MyReactApp\\eshopapp\\src\\components\\index.js":"11","C:\\MyReactApp\\eshopapp\\src\\components\\Cart\\CartItem\\styles.js":"12","C:\\MyReactApp\\eshopapp\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\MyReactApp\\eshopapp\\src\\components\\Products\\styles.js":"14","C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\Checkout\\styles.js":"15","C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"16","C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\CustomTextField.jsx":"18","C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\PaymentForm.jsx":"19","C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":153,"mtime":1609815800920,"results":"21","hashOfConfig":"22"},{"size":2810,"mtime":1609909417008,"results":"23","hashOfConfig":"22"},{"size":416,"mtime":1609849375250,"results":"24","hashOfConfig":"22"},{"size":1214,"mtime":1609834749514,"results":"25","hashOfConfig":"22"},{"size":1440,"mtime":1609833448219,"results":"26","hashOfConfig":"22"},{"size":1475,"mtime":1609845059611,"results":"27","hashOfConfig":"22"},{"size":1633,"mtime":1609824418109,"results":"28","hashOfConfig":"22"},{"size":129,"mtime":1609827134165,"results":"29","hashOfConfig":"22"},{"size":1982,"mtime":1609849566242,"results":"30","hashOfConfig":"22"},{"size":599,"mtime":1609834494178,"results":"31","hashOfConfig":"22"},{"size":233,"mtime":1609850513528,"results":"32","hashOfConfig":"22"},{"size":370,"mtime":1609849075682,"results":"33","hashOfConfig":"22"},{"size":1584,"mtime":1609848439218,"results":"34","hashOfConfig":"22"},{"size":300,"mtime":1609826040789,"results":"35","hashOfConfig":"22"},{"size":1210,"mtime":1609849962227,"results":"36","hashOfConfig":"22"},{"size":4221,"mtime":1609933169791,"results":"37","hashOfConfig":"22"},{"size":5431,"mtime":1609901678510,"results":"38","hashOfConfig":"22"},{"size":643,"mtime":1609896661914,"results":"39","hashOfConfig":"22"},{"size":2849,"mtime":1609932538604,"results":"40","hashOfConfig":"22"},{"size":1113,"mtime":1609905436283,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1fqvqid",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\MyReactApp\\eshopapp\\src\\index.js",[],["89","90"],"C:\\MyReactApp\\eshopapp\\src\\App.js",[],["91","92"],"C:\\MyReactApp\\eshopapp\\src\\components\\Products\\Product\\styles.js",[],["93","94"],"C:\\MyReactApp\\eshopapp\\src\\components\\Products\\Products.jsx",[],"C:\\MyReactApp\\eshopapp\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\MyReactApp\\eshopapp\\src\\components\\Navbar\\Navbar.jsx",["95","96"],"import React from 'react'\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core';\r\nimport { ShoppingCart } from '@material-ui/icons';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport logo from '../../assets/eShop.png';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = ({totalItems}) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"eShop\" height=\"25px\" className={classes.image} /> eShop\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === '/' && (\r\n                        <div className={classes.button}>\r\n                            <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\r\n                                <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                    <ShoppingCart />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\MyReactApp\\eshopapp\\src\\components\\Navbar\\styles.js",[],"C:\\MyReactApp\\eshopapp\\src\\lib\\commerce.js",[],["97","98"],"C:\\MyReactApp\\eshopapp\\src\\components\\Cart\\Cart.jsx",[],"C:\\MyReactApp\\eshopapp\\src\\components\\Cart\\styles.js",[],"C:\\MyReactApp\\eshopapp\\src\\components\\index.js",[],"C:\\MyReactApp\\eshopapp\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\MyReactApp\\eshopapp\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\MyReactApp\\eshopapp\\src\\components\\Products\\styles.js",[],"C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["99"],"import React, { useState, useEffect } from 'react'\r\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport useStyles from './styles';\r\n\r\nimport { commerce } from '../../../lib/commerce';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\n\r\nconst steps = ['Shipping address', 'Payment details'];\r\n\r\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const [isFinished, setIsFinished] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n    useEffect(() => {\r\n        if (cart.id) {\r\n            const generateToken = async () => {\r\n                try {\r\n                    const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n\r\n                    setCheckoutToken(token);\r\n                } catch {\r\n                    if (activeStep !== steps.length) history.push('/');\r\n                }\r\n            };\r\n\r\n            generateToken();\r\n        }\r\n    }, [cart]);\r\n\r\n    const test = (data) => {\r\n        setShippingData(data);\r\n\r\n        nextStep();\r\n    };\r\n\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n            setIsFinished(true);\r\n        }, 3000);\r\n    }\r\n    let Confirmation = () => (order.customer ? (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\r\n                <Divider className={classes.divider} />\r\n                <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n            </div>\r\n            <br />\r\n            <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n        </>\r\n    ) : isFinished ? (\r\n\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h5\">Thank you for your purchase.</Typography>\r\n                <Divider className={classes.divider} />               \r\n            </div>\r\n            <br />\r\n            <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n        </>\r\n\r\n    ) : (\r\n                <div className={classes.spinner}>\r\n                    <CircularProgress />\r\n                </div>\r\n            )\r\n    );\r\n\r\n    if (error) {\r\n        Confirmation = () => (\r\n            <>\r\n                <Typography variant=\"h5\">Error: {error}</Typography>\r\n                <br />\r\n                <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n            </>\r\n        );\r\n    }\r\n    const Form = () => (activeStep === 0\r\n        ? <AddressForm checkoutToken={checkoutToken} nextStep={nextStep} setShippingData={setShippingData} test={test} />\r\n        : <PaymentForm checkoutToken={checkoutToken} shippingData={shippingData} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} timeout={timeout} />\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\AddressForm.jsx",["100","101"],"import React, { useState, useEffect } from 'react'\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, test }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const methods = useForm();\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    };\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    };\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n            <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput required name=\"firstName\" label=\"First name\" />\r\n                        <FormInput required name=\"lastName\" label=\"Last name\" />\r\n                        <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n                        <FormInput required name=\"email\" label=\"Email\" />\r\n                        <FormInput required name=\"city\" label=\"City\" />\r\n                        <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                                    <MenuItem key={item.id} value={item.id}>\r\n                                        {item.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                                    <MenuItem key={item.id} value={item.id}>\r\n                                        {item.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                                    <MenuItem key={item.id} value={item.id}>\r\n                                        {item.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n","C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\MyReactApp\\eshopapp\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"104","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":46,"nodeType":"112","messageId":"113","endLine":2,"endColumn":54},{"ruleId":"110","severity":1,"message":"114","line":2,"column":56,"nodeType":"112","messageId":"113","endLine":2,"endColumn":60},{"ruleId":"102","replacedBy":"115"},{"ruleId":"104","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":38,"column":8,"nodeType":"119","endLine":38,"endColumn":14,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":42,"column":8,"nodeType":"119","endLine":42,"endColumn":10,"suggestions":"122"},{"ruleId":"117","severity":1,"message":"123","line":50,"column":8,"nodeType":"119","endLine":50,"endColumn":29,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],["125"],["126"],["125"],["126"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.",["125"],["126"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["128"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"136","text":"137"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"138","text":"139"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"140","text":"141"},[1465,1471],"[activeStep, cart, history]",[1779,1781],"[checkoutToken.id]",[2048,2069],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]